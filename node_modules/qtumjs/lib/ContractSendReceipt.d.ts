import { IRPCGetTransactionResult, IRPCSendToContractResult, QtumRPC } from "./QtumRPC";
export declare class ContractSendReceipt {
    private rpc;
    txid: string;
    sender: string;
    hash160: string;
    tx?: IRPCGetTransactionResult;
    constructor(rpc: QtumRPC, sendResult: IRPCSendToContractResult);
    /**
     * Returns a transaction object that had been confirmed at least n times
     */
    confirm(nblock?: number, timeout?: number, txUpdated?: (tx: IRPCGetTransactionResult) => void): Promise<IRPCGetTransactionResult>;
    /**
     * Check whether a transaction had been confirmed by n blocks.
     */
    check(nblock?: number): Promise<boolean>;
    /**
     * Repeatedly checks a transaction for confirmation.
     */
    done(nblock?: number, timeout?: number): Promise<void>;
}
