"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("mocha");
const chai_1 = require("chai");
const test_1 = require("./test");
// import { } from "mocha"
describe("QtumRPC", () => {
    it("can make RPC call", async () => {
        const info = await test_1.rpc.rawCall("getinfo");
        chai_1.assert.isNotEmpty(info);
        chai_1.assert.hasAllKeys(info, [
            "version",
            "protocolversion",
            "walletversion",
            "balance",
            "stake",
            "blocks",
            "timeoffset",
            "connections",
            "proxy",
            "difficulty",
            "testnet",
            "moneysupply",
            "keypoololdest",
            "keypoolsize",
            "paytxfee",
            "relayfee",
            "errors",
        ]);
    });
    it("throws error if method is not found", async () => {
        await test_1.assertThrow(async () => {
            return test_1.rpc.rawCall("unknown-method");
        });
    });
    it("throws error if calling method using invalid params", async () => {
        await test_1.assertThrow(async () => {
            return test_1.rpc.rawCall("getinfo", [1, 2]);
        });
    });
});
